<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="reviewMapper">
	<resultMap id="reviewResultSet" type="review">
		<result column="REVIEW_NO" property="reviewNo"/>
		<result column="REVIEW_CONTENT" property="reviewContent"/>
		<result column="REVIEW_STATUS" property="reviewStatus"/>
		<result column="REVIEW_ENROLLDATE" property="reviewEnrollDate"/>
		<result column="PROGRAM_NO" property="programNo"/>
		<result column="MEM_NO" property="memNo"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="RATING" property="rating"/>
		<result column="PROGRAM_NAME" property="programName"/>
	</resultMap>
	
	<insert id="reviewInsert" parameterType="review">
		insert
				into
					review
					(
						review_no,
						review_content,
						review_status,
						review_enrolldate,
						program_no,
						mem_no,
						origin_name,
						change_name,
						rating
					)
			values
					(
						seq_rvno.nextval,
						#{reviewContent},
						'Y',
						SYSDATE,
						#{programNo},
						#{memNo},
						#{originName},
						#{changeName},
						#{rating}
					) 
	</insert>
	
	<select id="selectReviewList" resultMap="reviewResultSet">
			select 
				r.review_no,
				r.review_content,
				r.review_status,
				r.review_enrolldate,
				r.program_no,
				r.mem_no,
				r.origin_name,
				r.change_name,
                r.rating,
                p.program_name
			from
				review r, program p
			where
                p.program_no = r.program_no
            and
				review_status = 'Y'
			order
				by
					review_no desc
	</select>
	
	
	<select id="selectReviewCount" resultType="_int">
		select
				count(*)
	      from
	      		review
	      where
	      		review_status= 'Y'
	
	</select>
	
	<select id="selectMyReview" resultMap="reviewResultSet">
		select
			  program_no
		from   
 			   review
		where
    		   mem_no = #{memNo}
	</select>
	
	




</mapper>
